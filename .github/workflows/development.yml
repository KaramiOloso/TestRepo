name: GITHUB Actions Demo
run-name: ${{ github.actor }} is testing out Github Actions

on:
  push:
    branches:
      - main

jobs:
  create-deployment-artifacts:
    name: Create Deployment Artifacts
    runs-on: ubuntu-latest
    outputs: 
      deployment-matrix: ${{ steps.export-deployment-matrix.outputs.deployment-matrix}}
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      
      - name: Check out repository code
        uses: actions/checkout@v3
      
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      
      - name: Build .NET project
        run: dotnet build

      - name: Run tests
        run: dotnet test

      - name: List overall files
        run: ls

      - name: Create deployment artifact
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: tar -czf "${GITHUB_SHA}".tar.gz --exclude=*.git --exclude=node_modules  *

      - name: Store artifact for deployment
        uses: actions/upload-artifact@v3
        with:
          name: app-build
          path: ${{ github.sha }}.tar.gz

      - name: Export Deployment Matrix
        id: export-deployment-matrix
        run: |
          JSON="$(cat ./deployment-config.json)"
          JSON="${JSON//'%'/'%25'}"
          JSON="${JSON//$'\n'/'%0A'}"
          JSON="${JSON//$'\r'/'%0D'}"
          echo "::set-output name=deployment-matrix::$JSON"

  prepare-release-on-server:
    runs-on: ubuntu-latest
    needs: create-deployment-artifacts
    strategy:
      matrix:
        server: ${{ fromJson(needs.create-deployment-artifacts.outputs.deployment-matrix)}}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: app-build

      - name: Create SSH key file
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key
          chmod 600 private_key

      - name: Upload artifact to server
        uses: nogsantos/scp-deploy@master
        with:
          src: ${{ github.sha }}.tar.gz
          host: ${{ matrix.server.ip}}
          remote: ${{ matrix.server.path}}
          user: ${{ matrix.server.username}}
          key: private_key
          port: ${{ matrix.server.port}}

      - name: Deploy application on server
        run: |
          ssh -i private_key -p ${{ matrix.server.port }} ${{ matrix.server.username }}@${{ matrix.server.ip }} << 'EOF'
          tar -xzf ${{ matrix.server.path }}/${{ github.sha }}.tar.gz -C ${{ matrix.server.path }}
          cd ${{ matrix.server.path }}
          dotnet publish -c Release -o out
          # Add additional deployment commands here
          EOF